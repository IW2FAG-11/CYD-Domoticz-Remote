; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:esp32dev]
platform = espressif32
#board = esp32dev #By defaut
board = esp32-2432S028R
framework = arduino
monitor_speed = 115200
lib_deps = 
	SPI
	lvgl/lvgl@^8.3.9
	https://github.com/Bodmer/TFT_eSPI.git
	https://github.com/PaulStoffregen/XPT2046_Touchscreen.git
	bblanchon/ArduinoJson@^6.21.3
	links2004/WebSockets@^2.4.1
	densaugeo/base64@^1.4.0

build_flags = 
	-DLV_CONF_PATH="../../../../src/conf/lv_conf.h" # file path
	-DUSER_SETUP_LOADED=1 #To enable multiple config for TFT_eSPI
	#-DILI9341_2_DRIVER=1
	#-DTFT_WIDTH=240
	#-DTFT_HEIGHT=320
	#-DTFT_BL=21 # LED back-light 
	#-DTFT_BACKLIGHT_ON=HIGH # Level to turn ON back-light (HIGH or LOW) 
	#-DTFT_MISO=12
	#-DTFT_MOSI=13 # In some display driver board, it might be written as "SDA" and so on
	#-DTFT_SCLK=14 # SPI SCLK broche D14
	#-DTFT_CS=15 # Chip select control pin 
	#-DTFT_DC=2 # Data Command control pin 
	#-DTFT_RST=-1 # Reset pin (could connect to Arduino RESET pin) 
	#-DLOAD_GCLD=1 # Font 1. Original Adafruit 8 pixel font needs ~1820 bytes in FLASH
	#-DLOAD_FONT2=1 # Font 2. Small 16 pixel high font, needs ~3534 bytes in FLASH, 96 characters
	#-DLOAD_GFXFF=1 # FreeFonts. Include access to the 48 Adafruit_GFX free fonts FF1 to FF48 and custom fonts
	#-DSMOOTH_FONT=1
	#-DSPI_FREQUENCY=55000000 # STM32 SPI1 only (SPI2 maximum is 27MHz) 
	#-DSPI_READ_FREQUENCY=20000000 # Optional reduced SPI frequency for reading TFT 
	#-DSPI_TOUCH_FREQUENCY=2500000
	#-DTFT_ROTATION=4 ; 0=0, 1=90, 2=180 or 3=270 degree, Mirrors: 6, 5, 4, 3
	#-DINVERT_COLORS # Need to invert color ?
	-DTOTAL_ICONX=3 # How many icon widht
	-DTOTAL_ICONY=3 # How many icon Heigh
	#-DFORCE_CONFIG # Enable or disable the forced network configuration.

# Partition scheme for OTA
board_build.partitions = min_spiffs.csv
#https://espacerm.com/webgen/esp32-augmentation-de-lespace-memoire-pour-le-code-programme/
#We take 47% for prog, 47% for OTA and 5% for SPIFFS